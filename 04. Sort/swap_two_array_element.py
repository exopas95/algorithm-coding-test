'''
[제목]
- 두 배열의 원소 교체

[내용]
- 두 배열 A와 B는 N개의 원소로 구성되어 있으며 원소는 모두 자연수이다.
- K번의 바꿔치기 연산을 수행할 수 있다.
- 최종 목표는 배열 A의 모든 원소의 합이 최대가 되도록 하는 것이다.
- N, K 그리고 배열 A와 B의 정보가 주어졌을 때, 최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 A의 모든 원소의 합의 최댓값을 출력하는 프로그램을 만드시오.

[입력 조건]
- 첫 번째 줄에 N, K가 공백으로 구분되어 입력된다. (1 <= N <= 100000, 0 <= K <= N)
- 두 번째 줄에 배열 A의 원소들이 공백으로 구분되어 입력된다. 모든 원소는 10,000,000보다 작은 자연수이다.
- 세 번째 줄에 배열 B의 원소들이 공백으로 구분되어 입력된다. 모든 원소는 10,000,000보다 작은 자연수이다.

[출력 조건]
- 최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 A의 모든 원소의 합의 최댓값을 출력한다.
'''
# %%
N, K = map(int, input().split())
A = list(map(int, input().split()))
B = list(map(int, input().split()))

for i in range(K):
    if min(A) < max(B):
        nMin = min(A)
        nMax = max(B)
        A[A.index(min(A))] = nMax
        B[B.index(max(B))] = nMin

print(sum(A)) 
